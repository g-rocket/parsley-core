require 'rake/clean'

require 'yaml'
require 'json'

require "#{File.dirname(__FILE__)}/../rake/helpers/yaml_to_plist.rake"

SRC_DIR = "src"
OBJ_DIR = "out"

ENDING_FILES = FileList["#{SRC_DIR}/endings/*.asc"]
STEM_XML_FILES = FileList["#{SRC_DIR}/stems/*.xml"]

directory OBJ_DIR

Dir.glob('../rake/*.rake.rb').each do |r|  
  require "#{File.dirname(__FILE__)}/#{r}"
end


task :gather_tags do
  stemtypes = {}
  stemtypes.default = 0
  morph = {}
  morph.default = 0
  le = ""
  STEM_XML_FILES.each do |xml_file|
    f = File.open(xml_file)
    Nokogiri::XML::Reader(f).each do |node|
      next if node.node_type != Nokogiri::XML::Reader::TYPE_ELEMENT
      case node.name
        when "le"
          le = node.inner_xml  
        when "itype" # stemtype
          stemtypes[node.inner_xml] += 1
        when "morph" # morph tags
          node.inner_xml.split(/[\s\/]+/).each do |morph_bit|
            morph[morph_bit] += 1
          end
      end
    end
  end
  output = { "stemtypes" => stemtypes.keys.sort, "morph" => morph.keys.sort}
  puts output.to_yaml
end

file "#{OBJ_DIR}/grammar.json" => [OBJ_DIR] do
  File.open("#{OBJ_DIR}/grammar.json", "w")
  .print(YAML.load_file("definition.yaml").to_json)
end

file "#{OBJ_DIR}/grammar.plist" => [OBJ_DIR] do
  File.open("#{OBJ_DIR}/grammar.plist", "w")
  .print PlistWriter.new(YAML.load_file("definition.yaml")).to_s
end

namespace :grammar do
  desc "Build the plist language description."
  task :plist => "#{OBJ_DIR}/grammar.plist"

  desc "Build the JSON language description."
  task :json => "#{OBJ_DIR}/grammar.json"
end
  
task :latin => [:grammar, "morph:att"]
task :default => :latin
